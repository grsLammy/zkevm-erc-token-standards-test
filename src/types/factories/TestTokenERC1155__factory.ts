/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  TestTokenERC1155,
  TestTokenERC1155Interface,
} from "../TestTokenERC1155";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "_admin",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "_enabled",
        type: "bool",
      },
    ],
    name: "AdminAccessSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "values",
        type: "uint256[]",
      },
    ],
    name: "TransferBatch",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "TransferSingle",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "value",
        type: "string",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "URI",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "_admins",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "accounts",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
    ],
    name: "balanceOfBatch",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "admin",
        type: "address",
      },
    ],
    name: "isAdmin",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_receiver",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "_amounts",
        type: "uint256[]",
      },
    ],
    name: "mintBatchTestERC1155",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_receiver",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "mintTestERC1155",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "amounts",
        type: "uint256[]",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeBatchTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "admin",
        type: "address",
      },
      {
        internalType: "bool",
        name: "enabled",
        type: "bool",
      },
    ],
    name: "setAdmin",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "tokenId",
    outputs: [
      {
        internalType: "uint256",
        name: "_value",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "uri",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060408051808201909152601881527f697066733a2f2f736f6d652d72616e646f6d2d686173682f00000000000000006020820152620000518162000063565b506200005d336200007c565b620001b1565b805162000078906002906020840190620000ce565b5050565b600380546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b828054620000dc9062000174565b90600052602060002090601f0160209004810192826200010057600085556200014b565b82601f106200011b57805160ff19168380011785556200014b565b828001600101855582156200014b579182015b828111156200014b5782518255916020019190600101906200012e565b50620001599291506200015d565b5090565b5b808211156200015957600081556001016200015e565b600181811c908216806200018957607f821691505b60208210811415620001ab57634e487b7160e01b600052602260045260246000fd5b50919050565b611a2680620001c16000396000f3fe608060405234801561001057600080fd5b506004361061010a5760003560e01c80634e1273f4116100a2578063aaea269811610071578063aaea26981461024f578063dfd648fa14610262578063e985e9c514610275578063f242432a146102b1578063f2fde38b146102c457600080fd5b80634e1273f4146101f9578063715018a6146102195780638da5cb5b14610221578063a22cb4651461023c57600080fd5b806317d70f7c116100de57806317d70f7c1461019b57806324d7806c146101a55780632eb2c2d6146101d15780634b0bddd2146101e657600080fd5b8062fdd58e1461010f57806301ffc9a7146101355780630d5e2053146101585780630e89341c1461017b575b600080fd5b61012261011d366004611409565b6102d7565b6040519081526020015b60405180910390f35b6101486101433660046114fa565b61036d565b604051901515815260200161012c565b610148610166366004611222565b60046020526000908152604090205460ff1681565b61018e610189366004611534565b6103bf565b60405161012c91906116b9565b6005546101229081565b6101486101b3366004611222565b6001600160a01b031660009081526004602052604090205460ff1690565b6101e46101df366004611270565b610453565b005b6101e46101f43660046113cd565b61049f565b61020c610207366004611433565b61050a565b60405161012c9190611678565b6101e4610634565b6003546040516001600160a01b03909116815260200161012c565b6101e461024a3660046113cd565b610648565b61020c61025d36600461137f565b610657565b610122610270366004611409565b6107b4565b61014861028336600461123d565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205460ff1690565b6101e46102bf36600461131a565b610835565b6101e46102d2366004611222565b61087a565b60006001600160a01b0383166103475760405162461bcd60e51b815260206004820152602a60248201527f455243313135353a2061646472657373207a65726f206973206e6f742061207660448201526930b634b21037bbb732b960b11b60648201526084015b60405180910390fd5b506000908152602081815260408083206001600160a01b03949094168352929052205490565b60006001600160e01b03198216636cdb3d1360e11b148061039e57506001600160e01b031982166303a24d0760e21b145b806103b957506301ffc9a760e01b6001600160e01b03198316145b92915050565b6060600280546103ce9061186f565b80601f01602080910402602001604051908101604052809291908181526020018280546103fa9061186f565b80156104475780601f1061041c57610100808354040283529160200191610447565b820191906000526020600020905b81548152906001019060200180831161042a57829003601f168201915b50505050509050919050565b6001600160a01b03851633148061046f575061046f8533610283565b61048b5760405162461bcd60e51b815260040161033e906116cc565b61049885858585856108f3565b5050505050565b6104a7610ad0565b6001600160a01b038216600081815260046020908152604091829020805460ff19168515159081179091558251938452908301527fe529461c8529abc0e0fe7c5ee361f74fe22e0b7574df1fc0b7558a282091fb78910160405180910390a15050565b6060815183511461056f5760405162461bcd60e51b815260206004820152602960248201527f455243313135353a206163636f756e747320616e6420696473206c656e677468604482015268040dad2e6dac2e8c6d60bb1b606482015260840161033e565b6000835167ffffffffffffffff81111561058b5761058b61191e565b6040519080825280602002602001820160405280156105b4578160200160208202803683370190505b50905060005b845181101561062c576105ff8582815181106105d8576105d8611908565b60200260200101518583815181106105f2576105f2611908565b60200260200101516102d7565b82828151811061061157610611611908565b6020908102919091010152610625816118d7565b90506105ba565b509392505050565b61063c610ad0565b6106466000610b2a565b565b610653338383610b7c565b5050565b3360009081526004602052604090205460609060ff168061068257506003546001600160a01b031633145b61069e5760405162461bcd60e51b815260040161033e906117f2565b815160008167ffffffffffffffff8111156106bb576106bb61191e565b6040519080825280602002602001820160405280156106e4578160200160208202803683370190505b50905060005b828110156107ab57600085828151811061070657610706611908565b6020026020010151116107535760405162461bcd60e51b81526020600482015260156024820152740616d6f756e742063616e6e6f74206265203c3d203605c1b604482015260640161033e565b60006107788787848151811061076b5761076b611908565b60200260200101516107b4565b90508083838151811061078d5761078d611908565b602090810291909101015250806107a3816118d7565b9150506106ea565b50949350505050565b3360009081526004602052604081205460ff16806107dc57506003546001600160a01b031633145b6107f85760405162461bcd60e51b815260040161033e906117f2565b610806600580546001019055565b600061081160055490565b905061082e84828560405180602001604052806000815250610c5d565b9392505050565b6001600160a01b03851633148061085157506108518533610283565b61086d5760405162461bcd60e51b815260040161033e906116cc565b6104988585858585610d71565b610882610ad0565b6001600160a01b0381166108e75760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161033e565b6108f081610b2a565b50565b81518351146109555760405162461bcd60e51b815260206004820152602860248201527f455243313135353a2069647320616e6420616d6f756e7473206c656e677468206044820152670dad2e6dac2e8c6d60c31b606482015260840161033e565b6001600160a01b03841661097b5760405162461bcd60e51b815260040161033e90611763565b3360005b8451811015610a6257600085828151811061099c5761099c611908565b6020026020010151905060008583815181106109ba576109ba611908565b602090810291909101810151600084815280835260408082206001600160a01b038e168352909352919091205490915081811015610a0a5760405162461bcd60e51b815260040161033e906117a8565b6000838152602081815260408083206001600160a01b038e8116855292528083208585039055908b16825281208054849290610a47908490611857565b9250508190555050505080610a5b906118d7565b905061097f565b50846001600160a01b0316866001600160a01b0316826001600160a01b03167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb8787604051610ab292919061168b565b60405180910390a4610ac8818787878787610e9b565b505050505050565b6003546001600160a01b031633146106465760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161033e565b600380546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b816001600160a01b0316836001600160a01b03161415610bf05760405162461bcd60e51b815260206004820152602960248201527f455243313135353a2073657474696e6720617070726f76616c20737461747573604482015268103337b91039b2b63360b91b606482015260840161033e565b6001600160a01b03838116600081815260016020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b6001600160a01b038416610cbd5760405162461bcd60e51b815260206004820152602160248201527f455243313135353a206d696e7420746f20746865207a65726f206164647265736044820152607360f81b606482015260840161033e565b336000610cc985611006565b90506000610cd685611006565b90506000868152602081815260408083206001600160a01b038b16845290915281208054879290610d08908490611857565b909155505060408051878152602081018790526001600160a01b03808a1692600092918716917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62910160405180910390a4610d6883600089898989611051565b50505050505050565b6001600160a01b038416610d975760405162461bcd60e51b815260040161033e90611763565b336000610da385611006565b90506000610db085611006565b90506000868152602081815260408083206001600160a01b038c16845290915290205485811015610df35760405162461bcd60e51b815260040161033e906117a8565b6000878152602081815260408083206001600160a01b038d8116855292528083208985039055908a16825281208054889290610e30908490611857565b909155505060408051888152602081018890526001600160a01b03808b16928c821692918816917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62910160405180910390a4610e90848a8a8a8a8a611051565b505050505050505050565b6001600160a01b0384163b15610ac85760405163bc197c8160e01b81526001600160a01b0385169063bc197c8190610edf90899089908890889088906004016115d5565b602060405180830381600087803b158015610ef957600080fd5b505af1925050508015610f29575060408051601f3d908101601f19168201909252610f2691810190611517565b60015b610fd657610f35611934565b806308c379a01415610f6f5750610f4a611950565b80610f555750610f71565b8060405162461bcd60e51b815260040161033e91906116b9565b505b60405162461bcd60e51b815260206004820152603460248201527f455243313135353a207472616e7366657220746f206e6f6e20455243313135356044820152732932b1b2b4bb32b91034b6b83632b6b2b73a32b960611b606482015260840161033e565b6001600160e01b0319811663bc197c8160e01b14610d685760405162461bcd60e51b815260040161033e9061171b565b6040805160018082528183019092526060916000919060208083019080368337019050509050828160008151811061104057611040611908565b602090810291909101015292915050565b6001600160a01b0384163b15610ac85760405163f23a6e6160e01b81526001600160a01b0385169063f23a6e61906110959089908990889088908890600401611633565b602060405180830381600087803b1580156110af57600080fd5b505af19250505080156110df575060408051601f3d908101601f191682019092526110dc91810190611517565b60015b6110eb57610f35611934565b6001600160e01b0319811663f23a6e6160e01b14610d685760405162461bcd60e51b815260040161033e9061171b565b80356001600160a01b038116811461113257600080fd5b919050565b600082601f83011261114857600080fd5b8135602061115582611833565b60405161116282826118aa565b8381528281019150858301600585901b8701840188101561118257600080fd5b60005b858110156111a157813584529284019290840190600101611185565b5090979650505050505050565b600082601f8301126111bf57600080fd5b813567ffffffffffffffff8111156111d9576111d961191e565b6040516111f0601f8301601f1916602001826118aa565b81815284602083860101111561120557600080fd5b816020850160208301376000918101602001919091529392505050565b60006020828403121561123457600080fd5b61082e8261111b565b6000806040838503121561125057600080fd5b6112598361111b565b91506112676020840161111b565b90509250929050565b600080600080600060a0868803121561128857600080fd5b6112918661111b565b945061129f6020870161111b565b9350604086013567ffffffffffffffff808211156112bc57600080fd5b6112c889838a01611137565b945060608801359150808211156112de57600080fd5b6112ea89838a01611137565b9350608088013591508082111561130057600080fd5b5061130d888289016111ae565b9150509295509295909350565b600080600080600060a0868803121561133257600080fd5b61133b8661111b565b94506113496020870161111b565b93506040860135925060608601359150608086013567ffffffffffffffff81111561137357600080fd5b61130d888289016111ae565b6000806040838503121561139257600080fd5b61139b8361111b565b9150602083013567ffffffffffffffff8111156113b757600080fd5b6113c385828601611137565b9150509250929050565b600080604083850312156113e057600080fd5b6113e98361111b565b9150602083013580151581146113fe57600080fd5b809150509250929050565b6000806040838503121561141c57600080fd5b6114258361111b565b946020939093013593505050565b6000806040838503121561144657600080fd5b823567ffffffffffffffff8082111561145e57600080fd5b818501915085601f83011261147257600080fd5b8135602061147f82611833565b60405161148c82826118aa565b8381528281019150858301600585901b870184018b10156114ac57600080fd5b600096505b848710156114d6576114c28161111b565b8352600196909601959183019183016114b1565b50965050860135925050808211156114ed57600080fd5b506113c385828601611137565b60006020828403121561150c57600080fd5b813561082e816119da565b60006020828403121561152957600080fd5b815161082e816119da565b60006020828403121561154657600080fd5b5035919050565b600081518084526020808501945080840160005b8381101561157d57815187529582019590820190600101611561565b509495945050505050565b6000815180845260005b818110156115ae57602081850181015186830182015201611592565b818111156115c0576000602083870101525b50601f01601f19169290920160200192915050565b6001600160a01b0386811682528516602082015260a0604082018190526000906116019083018661154d565b8281036060840152611613818661154d565b905082810360808401526116278185611588565b98975050505050505050565b6001600160a01b03868116825285166020820152604081018490526060810183905260a06080820181905260009061166d90830184611588565b979650505050505050565b60208152600061082e602083018461154d565b60408152600061169e604083018561154d565b82810360208401526116b0818561154d565b95945050505050565b60208152600061082e6020830184611588565b6020808252602f908201527f455243313135353a2063616c6c6572206973206e6f7420746f6b656e206f776e60408201526e195c881b9bdc88185c1c1c9bdd9959608a1b606082015260800190565b60208082526028908201527f455243313135353a204552433131353552656365697665722072656a656374656040820152676420746f6b656e7360c01b606082015260800190565b60208082526025908201527f455243313135353a207472616e7366657220746f20746865207a65726f206164604082015264647265737360d81b606082015260800190565b6020808252602a908201527f455243313135353a20696e73756666696369656e742062616c616e636520666f60408201526939103a3930b739b332b960b11b606082015260800190565b60208082526021908201527f43616c6c657220646f6573206e6f7420686176652041646d696e2041636365736040820152607360f81b606082015260800190565b600067ffffffffffffffff82111561184d5761184d61191e565b5060051b60200190565b6000821982111561186a5761186a6118f2565b500190565b600181811c9082168061188357607f821691505b602082108114156118a457634e487b7160e01b600052602260045260246000fd5b50919050565b601f8201601f1916810167ffffffffffffffff811182821017156118d0576118d061191e565b6040525050565b60006000198214156118eb576118eb6118f2565b5060010190565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052604160045260246000fd5b600060033d111561194d5760046000803e5060005160e01c5b90565b600060443d101561195e5790565b6040516003193d81016004833e81513d67ffffffffffffffff816024840111818411171561198e57505050505090565b82850191508151818111156119a65750505050505090565b843d87010160208285010111156119c05750505050505090565b6119cf602082860101876118aa565b509095945050505050565b6001600160e01b0319811681146108f057600080fdfea264697066735822122018eca70c781f46b9ed17c1d8b8bf7ce6d71234734ccf0d8a9114b64150dc7f2f64736f6c63430008070033";

export class TestTokenERC1155__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<TestTokenERC1155> {
    return super.deploy(overrides || {}) as Promise<TestTokenERC1155>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): TestTokenERC1155 {
    return super.attach(address) as TestTokenERC1155;
  }
  connect(signer: Signer): TestTokenERC1155__factory {
    return super.connect(signer) as TestTokenERC1155__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TestTokenERC1155Interface {
    return new utils.Interface(_abi) as TestTokenERC1155Interface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): TestTokenERC1155 {
    return new Contract(address, _abi, signerOrProvider) as TestTokenERC1155;
  }
}
